// Autogenerated. Notiondatabases are super cursed
export interface NotionMember {
  "Related to Badges table  (Members who have it) 2": RelatedToBadgesTableMembersWhoHaveIt2;
  "Home city": HomeCity;
  "Current Company": CurrentCompany;
  "Part of TUM.ai since": PartOfTumAiSince;
  Skill: Skill;
  "Related to Tasks IP4 (Responsible)": RelatedToTasksIp4Responsible;
  "Mentor Commitment": MentorCommitment;
  Property: Property;
  "Phone Number": PhoneNumber;
  "Home country": HomeCountry;
  "Which companies have you already worked for?": WhichCompaniesHaveYouAlreadyWorkedFor;
  "Email Address": EmailAddress;
  "LinkedIn Profile": LinkedInProfile;
  "What are you looking for? (Venture Database)": WhatAreYouLookingForVentureDatabase;
  "P&S Buddy": PSBuddy;
  "Left TUM.ai": LeftTumAi;
  Degree: Degree;
  "Data Agreement": DataAgreement;
  "TUM.ai Buddy": TumAiBuddy;
  "Related to Our Projects (Project Leads)": RelatedToOurProjectsProjectLeads;
  "Got gifts worth": GotGiftsWorth;
  University: University;
  "Related to Our Projects (Involved Members)": RelatedToOurProjectsInvolvedMembers;
  Role: Role;
  "BirthdayðŸŽ‚": Birthday;
  "Badges/Achievements": BadgesAchievements;
  Major: Major;
  "Person behind": PersonBehind;
  "Related to Badges table  (Members who have it) 1": RelatedToBadgesTableMembersWhoHaveIt1;
  "GitHub Profile": GitHubProfile;
  "Related to Badges table  (Members who have it) 3": RelatedToBadgesTableMembersWhoHaveIt3;
  "Functional or Mission-Based Department": FunctionalOrMissionBasedDepartment;
  "Project Member": ProjectMember;
  "Joined TUM.ai": JoinedTumAi;
  "Problems you want to solve (Venture Database)": ProblemsYouWantToSolveVentureDatabase;
  "Related to Badges table  (Members who have it)": RelatedToBadgesTableMembersWhoHaveIt;
  "Project Lead": ProjectLead;
  "Current Position": CurrentPosition;
  "AI Expertise": AiExpertise;
  name: Name;
}

export interface RelatedToBadgesTableMembersWhoHaveIt2 {
  id: string;
  type: string;
  rich_text: any[];
}

export interface HomeCity {
  id: string;
  type: string;
  rich_text: any[];
}

export interface CurrentCompany {
  id: string;
  type: string;
  rich_text: any[];
}

export interface PartOfTumAiSince {
  id: string;
  type: string;
  rich_text: any[];
}

export interface Skill {
  id: string;
  type: string;
  rich_text: any[];
}

export interface RelatedToTasksIp4Responsible {
  id: string;
  type: string;
  rich_text: any[];
}

export interface MentorCommitment {
  id: string;
  type: string;
  rich_text: any[];
}

export interface Property {
  id: string;
  type: string;
  rich_text: any[];
}

export interface PhoneNumber {
  id: string;
  type: string;
  phone_number: any;
}

export interface HomeCountry {
  id: string;
  type: string;
  rich_text: any[];
}

export interface WhichCompaniesHaveYouAlreadyWorkedFor {
  id: string;
  type: string;
  rich_text: any[];
}

export interface EmailAddress {
  id: string;
  type: string;
  email: string;
}

export interface LinkedInProfile {
  id: string;
  type: string;
  url: any;
}

export interface WhatAreYouLookingForVentureDatabase {
  id: string;
  type: string;
  multi_select: any[];
}

export interface PSBuddy {
  id: string;
  type: string;
  rich_text: any[];
}

export interface LeftTumAi {
  id: string;
  type: string;
  rich_text: any[];
}

export interface Degree {
  id: string;
  type: string;
  select: any;
}

export interface DataAgreement {
  id: string;
  type: string;
  rich_text: any[];
}

export interface TumAiBuddy {
  id: string;
  type: string;
  rich_text: any[];
}

export interface RelatedToOurProjectsProjectLeads {
  id: string;
  type: string;
  rich_text: any[];
}

export interface GotGiftsWorth {
  id: string;
  type: string;
  rich_text: any[];
}

export interface University {
  id: string;
  type: string;
  multi_select: any[];
}

export interface RelatedToOurProjectsInvolvedMembers {
  id: string;
  type: string;
  rich_text: any[];
}

export interface Role {
  id: string;
  type: string;
  multi_select: MultiSelect[];
}

export interface MultiSelect {
  id: string;
  name: string;
  color: string;
}

export interface Birthday {
  id: string;
  type: string;
  rich_text: any[];
}

export interface BadgesAchievements {
  id: string;
  type: string;
  multi_select: any[];
}

export interface Major {
  id: string;
  type: string;
  rich_text: any[];
}

export interface PersonBehind {
  id: string;
  type: string;
  rich_text: any[];
}

export interface RelatedToBadgesTableMembersWhoHaveIt1 {
  id: string;
  type: string;
  rich_text: any[];
}

export interface GitHubProfile {
  id: string;
  type: string;
  url: any;
}

export interface RelatedToBadgesTableMembersWhoHaveIt3 {
  id: string;
  type: string;
  rich_text: any[];
}

export interface FunctionalOrMissionBasedDepartment {
  id: string;
  type: string;
  rich_text: any[];
}

export interface ProjectMember {
  id: string;
  type: string;
  rich_text: any[];
}

export interface JoinedTumAi {
  id: string;
  type: string;
  rich_text: any[];
}

export interface ProblemsYouWantToSolveVentureDatabase {
  id: string;
  type: string;
  rich_text: any[];
}

export interface RelatedToBadgesTableMembersWhoHaveIt {
  id: string;
  type: string;
  rich_text: any[];
}

export interface ProjectLead {
  id: string;
  type: string;
  rich_text: any[];
}

export interface CurrentPosition {
  id: string;
  type: string;
  rich_text: any[];
}

export interface AiExpertise {
  id: string;
  type: string;
  multi_select: any[];
}

export interface Name {
  id: string;
  type: string;
  title: Title[];
}

export interface Title {
  type: string;
  text: Text;
  annotations: Annotations;
  plain_text: string;
  href: any;
}

export interface Text {
  content: string;
  link: any;
}

export interface Annotations {
  bold: boolean;
  italic: boolean;
  strikethrough: boolean;
  underline: boolean;
  code: boolean;
  color: string;
}
